#!/bin/groovy
pipeline {
    agent any
    parameters {
        string(name: 'BRANCH', defaultValue: 'master', description: 'Which branch would you like to build?')
    }
    tools {
        maven 'maven'
    }
    stages {
        stage('checkout') {
            steps {
                git url: 'https://github.com/mkrzyzanowski/become-a-plumber.git', branch: params.BRANCH
            }
        }
        stage('build') {
            steps{
                dir('app') {
                    sh 'mvn clean package'
                }
            }
            post {
                success {
                    archiveArtifacts 'app/target/**'
                    junit 'app/target/**/*.xml'
                }
            }
        }
        stage('deploy') {
            stages {
                stage('prepare') {
                    steps {
                        dir('app') {
                            sh 'docker build -t plumbers/sparktodo:SNAPSHOT .'
                            sh 'docker rm -f test || exit 0'
                        }
                    }
                }
                stage('deploy test') {
                    steps {
                        sh 'docker run -d -p 9998:9999 --name "test" plumbers/sparktodo:SNAPSHOT'
                    }
                }
            }
        }
        stage('test api') {
            steps {
                dir('api-tests') {
                    sh './gradlew clean test -Dapp.url=http://localhost:9998'
                }
            }
            post {
                always {
                    archiveArtifacts 'api-tests/build/reports/**'
                    junit 'api-tests/build/test-results/**/*.xml'
                }
            }
        }
        stage('Exploratory test') {
            input {
                message 'Can we release the application?'
                id 'exploratory'
                ok 'Yep, all good.'
            }
            steps {
                echo "QA said it is ok to release!"
            }
        }
        stage('Release') {
            when { equals actual: params.BRANCH, expected: 'master' }
            steps {
                sh 'docker rm -f prod || exit 0'
                sh 'docker run -d -p 9999:9999 --name "prod" plumbers/sparktodo:SNAPSHOT'
            }
        }
    }
}